from aiogram import Bot, Dispatcher, executor, types
import asyncio
import logging
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from keyboards import *
import texts


api = '7793599961:AAF9TpoAN_-gBdbV4q_-I02M0xU_FX8L2Ik'
logging.basicConfig(level=logging.INFO)
bot = Bot(token=api)
dp = Dispatcher(bot, storage=MemoryStorage())


@dp.message_handler(commands=['start'])
async def start(message):
    await message.answer(f'‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n' + texts.start, reply_markup=start_kb)


@dp.message_handler(Text(equals=['üìã –ú–µ–Ω—é']))
async def send_menu(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    await message.answer(
        "üìã –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥:\n"
        "/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n",
        reply_markup=start_kb
    )


@dp.message_handler(Text(equals=['‚ÑπÔ∏è –û –Ω–∞—Å']))
async def send_info(message):
    await message.answer(texts.about_as, parse_mode='HTML', reply_markup=start_kb)


@dp.message_handler(Text(equals=['‚ùì –ü–æ–º–æ—â—å']))
async def help_send(message):
    await message.answer('<b>–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã</b>', parse_mode='HTML', reply_markup=buy_kb)


@dp.message_handler(Text(equals=['üìä –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è']))
async def send_price_list(message):
    await message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É</b>', parse_mode='HTML', reply_markup=catalog_kb)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
